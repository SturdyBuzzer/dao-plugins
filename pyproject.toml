

[tool.poetry]
name = "modorganizer-dao-plugins"
version = "0.1.0"
description = "Dragon Age: Origins plugins for Mod Organizer 2"
authors = ["SturdyBuzzer <sturdybuzzer@protonmail.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pyqt6 = "^6.7.0"

[tool.poetry.group.dev.dependencies]
mobase-stubs = "^2.5.2"
pyqt6 = "^6.7.0"
pyqt6-stubs = "20250824"
pyright = "^1.1.400"
ruff = "^0.4.0"
types-psutil = "^5.9.5.20240516"
poethepoet = "^0.34.0"

[tool.poe.tasks]
format-imports = "ruff check --select I . --fix"
format-ruff = "ruff format ."
format.sequence = ["format-imports", "format-ruff"]
lint-ruff = "ruff check ."
lint-ruff-format = "ruff format --check ."
lint-pyright = "pyright ."
lint.sequence = ["lint-ruff", "lint-ruff-format", "lint-pyright"]
lint.ignore_fail = "return_non_zero"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
extend-select = ["B", "Q", "I"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["PyQt6.QtCore.QModelIndex"]

[tool.ruff.lint.isort]
known-first-party = ["mobase"]

[tool.pyright]
exclude = ["lib", "**/.*", "venv"]
typeCheckingMode = "strict"
reportMissingTypeStubs = true
reportMissingModuleSource = false
pythonPlatform = "Windows"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

